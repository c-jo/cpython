Python 3.8 for RISC OS
----------------------

** Alpha Release 3 **

PLEASE NOTE: This is an alpha release of Python 3.8 for RISC OS. Please treat as such. Feedback, comments or bugs can be sent to chris@lessthan3.org.uk

Port by Chris Johns, developmnet supported by RISC OS Developments Ltd.

Welcome to Python on RISC OS, bringing the power and flexibility of the Python language to RISC OS.

This document does not go into any detail about the python programming language itself, but details the RISC OS specific items. There are lots of documents and tutorials online and in books about python itself.

Filetypes
---------
One of the major differences between RISC OS and other operating systems is the use of fiiletpes rather than extensions to identify the content of a file, and the use of the . as a directory seprator.

So on linux a python file may be named spam.py (file spam with extension of .py), on RISC OS 'spam.py' would mean the file called py in directory spam, which is almost certainly not what you want!

So the 'RISC OS way' is to have a file called spam with the filetype of Python. To assist with running code from other platforms, you can also call the file spam/py (with any type). As long as !Python has been 'seen' double-clicking on a python file will run it in a Task Window.

Types are also used for the cached bytecode (.pyc) and extensions (.so).

RISC OS additions
-----------------
os.get_filetype(object) will return the file type of the given object os.set_filetype(object, type) will set it.

swi.swi allows python code to call RISC OS SWIs.

the first argument is the SWI number or name, the second is a format sring for the rest of the arguments.

eg, swi.swi('OS_Write0','s','Hello RISC OS World')

Known Bugs
----------
Currently subprocess.Popen supprt is very limited. It will attempt to start the child process with Wimp_StartTask, but is limited in what it can do.

The filetypes used for python bytecode and extensions are not registered.

Some of the standard library modules have not been built.

History
-------
3.8.0a1
Initial RISC OS Alpha Release.

3.8.0a2
Added support for Pythom$Path.
Fixed get/set filetype calls to handle non-ASCII characters.
Added SSL and SQLite3 modules.

3.8.0a3
Fixed bug that was preventing sockets being created.
Use OS_ReadLine32 to get innput in interactive mode.
os.getenv reads the RISC OS environment.
Added support to get data as bytes from the swi module.
Fixed SSL to get the CA certificates from <CaCertificates$Dir>.
Added lzma and bz2 modules.
Added ctypes module.
Various build fixes.


